library(e1071)
library(caret)
library(tree)
setwd("C:/Users/uvent/source/repos/hustarAI/r-programming/project")
heart <- read.csv("heart.csv")
heart$target <- as.factor(heart$target)
attach(heart)
# 1.1
set.seed(1000)
N<-nrow(heart)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train<-heart[tr.idx,]
test<-heart[-tr.idx,]
# appendix
library(randomForest)
rf<-randomForest(target~., data=train, importance=T)
rf
rf<-randomForest(target~., data=train, importance=T, mtry=4)
rf
rf<-randomForest(target~., data=train, importance=T)
rf
rfpred<-predict(rf, test)
confusionMatrix(rfpred, test$target)
rf<-randomForest(target~., data=train, importance=T, mtry=4)
rf
rfpred<-predict(rf, test)
confusionMatrix(rfpred, test$target)
rf<-randomForest(target~., data=train, importance=T, mtry=5)
rf
rfpred<-predict(rf, test)
confusionMatrix(rfpred, test$target)
rf<-randomForest(target~., data=train, importance=T, mtry=6)
rf
rfpred<-predict(rf, test)
confusionMatrix(rfpred, test$target)
rf<-randomForest(target~., data=train, importance=T, mtry=7)
rf
rfpred<-predict(rf, test)
confusionMatrix(rfpred, test$target)
rf<-randomForest(target~., data=train, importance=T, mtry=2)
rf
rfpred<-predict(rf, test)
confusionMatrix(rfpred, test$target)
rf<-randomForest(target~., data=train, importance=T, mtry=3)
rf
rfpred<-predict(rf, test)
confusionMatrix(rfpred, test$target)
# appendix
library(randomForest)
rf<-randomForest(target~., data=train, importance=T, mtry=2)
rf
rfpred<-predict(rf, test)
confusionMatrix(rfpred, test$target)
round(importance(rf), 2)
heart3<-heart[names(heart) %in% c("thalach", "oldpeak", "ca")]
heart3<-heart[names(heart) %in% c("thalach", "oldpeak", "ca", "target")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3)
rf3
rfpred3<-predict(rf3, test)
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("sex", "fbs", "restecg", "slope")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=4)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=5)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=6)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=4)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=5)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=6)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=7)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=8)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
tr.idx<-sample(1:N, size=N*3/4, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*3/4, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*3/4, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*3/4, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=4)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*3/4, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*3/4, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*3/4, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*3/4, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*3/4, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
confusionMatrix(rfpred, test$target)
round(importance(rf), 2)
tr.idx<-sample(1:N, size=N*4/5, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=4)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=4)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=5)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
rf3<-randomForest(target~., data=train3, ntry=2)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
heart3<-heart[!names(heart) %in% c("fbs", "restecg")]
set.seed(1000)
N<-nrow(heart3)
tr.idx<-sample(1:N, size=N*2/3, replace=FALSE)
train3<-heart3[tr.idx,]
test3<-heart3[-tr.idx,]
rf3<-randomForest(target~., data=train3, ntry=3)
rf3
rfpred3<-predict(rf3, test3)
confusionMatrix(rfpred3, test3$target)
